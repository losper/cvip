steps:
- task: Npm@1
  inputs:
    command: 'install'
    workingDir: './'
  displayName: 'install npm submodules'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      npm run msvc2017
      rm build/*.ilk
      rm build/*d.dll
      ls build
  displayName: 'build windows_x64'

# Run test-ci-partial
- script: npm run test-ci
  displayName: 'Run tests'

# Publish CI test results
- task: PublishTestResults@2
  inputs:
    testResultsFiles: '$(System.DefaultWorkingDirectory)/reports/junit/*.xml'
    testRunTitle: 'CI Tests $(Agent.OS)'
  displayName: 'Publish test results'
  condition: succeededOrFailed()
  
# Publish CI coverage
- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/reports/coverage/*coverage.xml'
    condition: succeededOrFailed()

- task: ArchiveFiles@2
  displayName: 'Archive lib'
  inputs:
    rootFolderOrFile: lib
    includeRootFolder: false
    archiveType: tar
    archiveFile: 'cvip.tar.gz'
 
- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: './'
    customCommand: 'run build'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
  
- task: Npm@1
  inputs:
    command: 'publish'
    workingDir: './'
    customRegistry: 'useFeed'
    publishEndpoint: 'npmjs.org'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))