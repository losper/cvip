steps:
# - task: Npm@1
#   inputs:
#     command: 'install'
#     workingDir: './'
#   displayName: 'install npm submodules'
- task: Cache@2
  inputs:
    key: 'npm | "$(Agent.OS)" | package-lock.json'
    restoreKeys: |
      npm | "$(Agent.OS)"
    path: $(npm_config_cache)
  displayName: Cache npm

- script: npm ci

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      npm run msvc2017
      rm build/*.ilk
      rm build/*d.dll
      rm build/*.pdb
      ls build
  displayName: 'build windows_x64'

# Run test-ci-partial
- script: npm run test-ci
  displayName: 'Run tests'

# Publish CI test results
- task: PublishTestResults@2
  inputs:
    testResultsFiles: '$(System.DefaultWorkingDirectory)/reports/junit/*.xml'
    testRunTitle: 'CI Tests $(Agent.OS)'
  displayName: 'Publish test results'
  condition: succeededOrFailed()
  
# Publish CI coverage
- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/reports/coverage/*coverage.xml'
    condition: succeededOrFailed()

- task: ArchiveFiles@2
  displayName: 'Archive build'
  inputs:
    rootFolderOrFile: build
    includeRootFolder: true
    archiveType: tar
    archiveFile: '$(Build.ArtifactStagingDirectory)/cvip.tar.gz'

- task: GitHubRelease@0
  displayName: "GitHub release (create)"
  inputs:
    gitHubConnection: "ga-connect"
    addChangeLog: false
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
 
- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: './'
    customCommand: 'run build'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
  
- task: Npm@1
  inputs:
    command: 'publish'
    workingDir: './'
    customRegistry: 'useFeed'
    publishEndpoint: 'npmjs.org'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))

- script: |
    echo %CVIPUSER%
    curl -u %CVIPUSER%:%CVIPPASS% -H "Accept: application/json" -H "Content-type: application/json" -X POST -d "{'action': 'published'}" https://passoa.coding.net/api/cci/job/239660/trigger
  displayName: 'Command Line Script'
  env:
    CVIPUSER: ptos650d93zh
    CVIPPASS: 09760a524a3a1acf77cd85a953202d2f15383ffd
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))